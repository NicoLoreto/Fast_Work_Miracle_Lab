basePath: null
definitions:
    IProfessionalUser:
        description: ""
        properties:
            id:
                type: number
                format: double
                description: ""
            email:
                type: string
                description: ""
            password:
                type: string
                description: ""
            name:
                type: string
                description: ""
            last_name:
                type: string
                description: ""
            dni:
                type: string
                description: ""
            province:
                type: string
                description: ""
            city:
                type: string
                description: ""
            tel:
                type: string
                description: ""
            link:
                type: string
                description: ""
            about_me:
                type: string
                description: ""
            gender:
                type: string
                description: ""
            birth_date:
                type: string
                description: ""
            auth_number:
                type: string
                description: ""
            img:
                type: string
                description: ""
            category_id:
                type: string
                description: ""
            state:
                type: number
                format: double
                description: ""
        type: object
        required:
            - email
            - name
            - last_name
            - dni
            - province
            - city
            - tel
            - gender
            - birth_date
            - category_id
    ICategory:
        description: ""
        properties:
            id:
                type: number
                format: double
                description: ""
            name:
                type: string
                description: ""
        type: object
        required:
            - id
            - name
info:
    description: 'FastWork API.'
    license:
        name: ISC
    title: fastwork-api
    version: 1.0.0
paths:
    /api/auth/signup:
        post:
            operationId: AuthPost
            produces:
                - text/html
            responses:
                '200':
                    description: Ok
                    schema:
                        type: string
                '201':
                    description: 'Professional User created'
                    schema:
                        type: string
                '400':
                    description: 'Bad request'
                    schema:
                        type: string
                '500':
                    description: 'Error server'
                    schema:
                        type: string
            description: ""
            tags:
                - AuthUser
            consumes:
                - application/json
            parameters:
                -
                    description: "   * This is an endpoint to register as a professional user.\n\n  Example:\n\n     \"email\": \"juan@gmail.com\",\n     \"password\": \"1234\",\n     \"name\": \"Juan\",\n     \"last_name\": \"Lopez\",\n     \"dni\": \"34614738\",\n     \"province\": \"Santa Fe\",\n     \"city\": \"Rosario\",\n     \"tel\": \"2477434454\",\n     \"link\": \"hi-world.com.ar\",\n     \"about_me\": \"Experienced carpenter skilled in crafting wood into functional and artistic pieces. Dedicated to transforming ideas into tangible, quality creations.\",\n     \"gender\": \"Male\",\n     \"birth_date\": \"1990-01-03\",\n     \"auth_number\": \"12312da134123QWw\",\n     \"img\": \"photo.png\",\n     \"category_id\": \"3\""
                    in: body
                    name: authUser
                    required: true
                    schema:
                        $ref: '#/definitions/IProfessionalUser'
    /api/auth/login:
        post:
            operationId: AuthLogin
            produces:
                - text/html
            responses:
                '200':
                    description: Success
                    schema:
                        type: string
                '400':
                    description: 'Bad request'
                    schema:
                        type: string
                '500':
                    description: 'Error server'
                    schema:
                        type: string
            description: ""
            tags:
                - AuthUser
            consumes:
                - application/json
            parameters:
                -
                    description: "  * This is an endpoint to login as a professional user. The user will receive an authentication\n    token to be validated when making requests.\n\n  Example:\n\n     \"email\": \"juan@gmail.com\",\n     \"password\": \"1234\""
                    in: body
                    name: authUser
                    required: true
                    schema:
                        $ref: '#/definitions/IProfessionalUser'
    /api/categories/:
        get:
            operationId: CategoriesGet
            produces:
                - application/json
                - text/html
            responses:
                '200':
                    description: Success
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ICategory'
                '500':
                    description: 'Server error'
                    schema:
                        type: string
            description: '* This endpoint returns all categories added by an administrator.'
            tags:
                - Categories
            parameters: []
        post:
            operationId: CategoriesPost
            produces:
                - text/html
            responses:
                '201':
                    description: 'Created category'
                    schema:
                        type: string
                '204':
                    description: 'No content'
                '400':
                    description: 'Bad request'
                    schema:
                        type: string
                '409':
                    description: 'The category is already exists'
                    schema:
                        type: string
                '500':
                    description: 'Server error'
                    schema:
                        type: string
            description: ""
            tags:
                - Admin
            security:
                -
                    default:
                        - x-auth
            consumes:
                - application/json
            parameters:
                -
                    description: " * This endpoint is implemented to add categories by an authenticated administrator. \n For now, for testing purposes, you can generate the token in jwt.io by passing the jwt.secret from \n the .env file in the signature.\n\n Example:\n  \n     \"name\": \"Cerrajero\""
                    in: body
                    name: category
                    required: true
                    schema:
                        $ref: '#/definitions/ICategory'
    /api/professional_user:
        get:
            operationId: ProfessionalUserGet
            produces:
                - application/json
                - text/html
            responses:
                '200':
                    description: Success
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/IProfessionalUser'
                '404':
                    description: 'There are no registered users'
                    schema:
                        type: string
                '500':
                    description: 'No connection to database'
                    schema:
                        type: string
            description: ""
            tags:
                - 'Professional Users'
            parameters: []
        put:
            operationId: ProfessionalUserEditUser
            produces:
                - text/html
            responses:
                '200':
                    description: 'Updated user'
                    schema:
                        type: string
                '404':
                    description: 'User not found'
                    schema:
                        type: string
            description: ""
            tags:
                - 'Professional Users'
            security:
                -
                    default:
                        - x-auth
            consumes:
                - application/json
            parameters:
                -
                    description: "* This endpoint is for edit a professional user.\n\nExample: \n\n     \"name\": \"Juan Pedro\",\n     \"last_name\": \"Lopez\",\n     \"dni\": \"34614738\",\n     \"province\": \"Santa Fe\",\n     \"city\": \"Franck\",\n     \"tel\": \"0341434454\",\n     \"link\": \"hi-world.com.ar\",\n     \"about_me\": \"Experienced carpenter skilled in crafting wood into functional and artistic pieces. Dedicated to transforming ideas into tangible, quality creations.\",\n     \"gender\": \"Male\",\n     \"birth_date\": \"1990-01-03\",\n     \"auth_number\": \"12312da134123QWw\",\n     \"img\": \"photo.png\",\n     \"category_id\": \"3\""
                    in: body
                    name: professionalUser
                    required: true
                    schema:
                        $ref: '#/definitions/IProfessionalUser'
        delete:
            operationId: ProfessionalUserDelete
            produces:
                - text/html
            responses:
                '200':
                    description: 'Deleted user'
                    schema:
                        type: string
                '204':
                    description: 'No content'
                '500':
                    description: 'The user no longer exists'
                    schema:
                        type: string
            description: '* This endpoint is for remove a professional user when authenticated. It is removed from the database.'
            tags:
                - 'Professional Users'
            security:
                -
                    default:
                        - x-auth
            parameters: []
    '/api/professional_user/{id}':
        get:
            operationId: ProfessionalUserGetById
            produces:
                - application/json
                - text/html
            responses:
                '200':
                    description: Success
                    schema:
                        $ref: '#/definitions/IProfessionalUser'
                '404':
                    description: 'User not found'
                    schema:
                        type: string
                '500':
                    description: 'No connection to database'
                    schema:
                        type: string
            description: ""
            tags:
                - 'Professional Users'
            parameters:
                -
                    description: '* This endpoint returns an professional user by id.'
                    in: path
                    name: id
                    required: true
                    type: number
                    format: double
    '/api/professional_user/category/{category_id}':
        get:
            operationId: ProfessionalUserGetByCategory
            produces:
                - application/json
                - text/html
            responses:
                '200':
                    description: Success
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/IProfessionalUser'
                '404':
                    description: 'There are no professional users registered with that category'
                    schema:
                        type: string
                '500':
                    description: 'No connection to database'
                    schema:
                        type: string
            description: ""
            tags:
                - 'Professional Users'
            parameters:
                -
                    description: '* This endpoint returns all registered professional users by trade category to which they belong.'
                    in: path
                    name: category_id
                    required: true
                    type: number
                    format: double
    /api/professional_user/disable:
        put:
            operationId: ProfessionalUserDisableAccount
            produces:
                - text/html
            responses:
                '200':
                    description: 'Disabled user'
                    schema:
                        type: string
                '500':
                    description: 'The user no longer exists'
                    schema:
                        type: string
            description: '* This endpoint is for disable a professional user when authenticated. It is not removed from the database, it changes its state to 0.'
            tags:
                - 'Professional Users'
            security:
                -
                    default:
                        - x-auth
            consumes:
                - application/json
            parameters: []
swagger: '2.0'
securityDefinitions:
    default:
        type: apiKey
        name: x-auth
        in: header
